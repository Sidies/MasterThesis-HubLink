,config_hash,uid,question_result,golden_answer_result,golden_triples_result,topic_entity_id_result,topic_entity_value_result,is_generated_with_result,knowledge_representation_type_result,question_type_result,question_type_reasoning_result,answer_type_result,answer_type_reasoning_result,information_type_result,hop_amount_result,based_on_template_result,generated_answer,retrieved_context,factual_correctness_f1,factual_correctness_precision,factual_correctness_recall,faithfulness,context_recall,llm_context_precision_without_reference,llm_context_precision_with_reference,context_entity_recall,answer_relevancy,semantic_similarity,non_llm_string_similarity,bleu_score,rouge_score,hit@1,triple_presence,entity_presence,runtime,llm_cost,llm_tokens,cpu_count,cpu_energy_consumption,cpu_model,gpu_count,gpu_energy_consumption,gpu_model,os,ram_energy_consumption,total_energy_consumption,timestamp,tracking_duration,emissions,question_question,golden_answer_question,source_ids,golden_doc_chunks,golden_triples_question,is_generated_with_question,topic_entity_id_question,knowledge_representation_type_question,question_type_question,question_type_reasoning_question,answer_type_question,answer_type_reasoning_question,information_type_question,topic_entity_value_question,hop_amount_question,based_on_template_question
0,bee110b0ae7419cac5884d8cc34e2dda,62aebb0f-4899-414c-8d2f-23e8c2902980,"Can we use a generic, modular, and highly scalable process operation framework to automate complex data processing and co-simulation workflows for research on data-driven energy systems?","Yes, we can use a generic, modular, and highly scalable process operation framework to automate complex data processing and co-simulation workflows for research on data-driven energy systems. The context explicitly states that such a framework is presented for this purpose.","['(Generic and Modular Process Operation Framework, http://example.org/hasDescription, A framework that automates the startup, synchronization, and management of scientific data processing and simulation tools.)', '(A Generic and Highly Scalable Framework for the Automation and Execution of Scientific Data Processing and Simulation Workflows, http://example.org/hasResearchQuestion, How can the framework automate the startup, synchronization, and management of scientific data processing and simulation workflows?)']",http://ressource.org/publisher_1,IEEE,llm_extraction_strategy,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between the proposed framework and its potential impact on automating workflows, which involves assessing causality and correlation. Comparisons is also relevant as the question implies a comparison between the proposed framework and existing methods or frameworks in terms of their capabilities for automating complex workflows.","['Methodology', 'Research']","The question pertains to the use of a framework for automating processes, which falls under the category of Methodology. Additionally, it relates to research on data-driven energy systems, making Research another relevant classification.",,3,,"The question cannot be fully answered with the provided context. The context discusses self-organizing architectures for Systems-of-Systems (SoS) on the Internet of Things (IoT) and the use of the SosADL framework, but it does not provide specific information regarding the use of a generic, modular, and highly scalable process operation framework for automating complex data processing and co-simulation workflows in the context of data-driven energy systems.","|| Content: question posed is: how to formally describe (in terms of concepts and mechanisms) the SoS architecture at micro-scale in order to spontaneously create the required emergent behavior at macro-scale for fulling the specified SoS mission on the IoT?This paper addresses this challenging question, by investigating the theory of self-organization [30], and conceiving a novel approach based on self-organization as a mechanism for spontaneously creating concrete software-intensive SoS architectures on Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: through constraints among constituent systems at micro-scale, where each micro-scale behavior expresses what are the actions to execute for enforcing constraints.It is indeed, based on the general theory of self-organization from Ilya Prigogine, who demonstrated that very simple micro-scale rules can describe highly complex dissipative macro-scale structures, that we developed this novel architectural approach for self-organizing SoSs on the IoT supported by SosADL.Therefore, in our approach Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: 1 IntroductionSoftware-intensive systems are often independently developed, operated, managed, and evolved. Progressively, communication networks enabled these independent systems to interact, yielding a new kind of complex system, i.e. a system that is itself composed of systems, the so-called System-of-Systems (SoS).SoSs are evolutionary developed from independent systems to achieve missions not possible to be accomplished by a single system alone [15]. They are architected to produce Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: for both self-organizing architectures and traditional, non-self-organizing ones [22].On-going and future work is mainly related with the application of SosADL in industrial-scale projects. Regarding the IoT, they include joint work with IBM for applying SosADL to architect smart-farms in cooperative settings, and with SEGULA for applying SosADL to architect SoSs in the naval engineering domain. Description of real-scale self-organizing SoS architectures, and their validation and verification Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: self-organizing architectures.Regarding self-organizing SoSs, HÃ¤ner et al. [7] address the importance of self-organization for developing large SoSs. It does not provide a formalization of self-organization for SoS architectures, limiting to apply the self-organization principle in practice in the domain of natural crisis management. In their work, self-organization is established on the basis of autonomous and concurrent tasks that are enacted by choreographies specifying the expected behavior Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: to study different architectural alternatives and take key architectural decisions to make possible the emergence of self-organizing behaviors in SoS architectures.In particular, the result of this field study showed that the different tools integrated in the SosADL Studio provides the appropriate features for describing and analyzing SoS architectures and their emergent behaviors, in particular regarding description, validation, and verification of self-organizing SoS architectures.In fact, a Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: after having being proved using the Coq proof assistant (http://coq.inria.fr/) [28].Applying model-to-model transformations, SoS architecture descriptions are transformed to input languages of analysis tools, including UPPAAL (http://www.uppaal.org/) for model checking, DEVS (http://www.ms4systems.com/) for simulation, and PLASMA (http://project.inria.fr/plasma-lab/) for statistical model checking.The constraint solving mechanism implemented to support the , , and  constraint handling Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: of the set of SoS constituent systems. It is complementary to our work in the sense that their designed self-organizing SoS architecture can be formally described with SosADL, in particular supporting the description and formalization of self-reconfiguration in the choreographies.Regarding self-organizing flocking architectures, Jaimes et al. [12] present a realistic situation where an autonomous fixed-wing UAV and semi-autonomous swarm of quad-rotor UAVs work together to carry out the Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: (Dependable Ensembles of Emerging Components) [4] and SCEL (Service Component Ensemble Language) [36]. In this case, SoS homogeneous architectures described and analyzed with SosADL can be transformed to implementation models in SCEL or DEECo. SosADL also supports transformation to service-oriented architectural styles [37] applied to SoS implementation.In summary, based on the study of the state-of-the-art [23], SosADL enhanced with concurrent constraints is positioned as a pioneering ADL Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: subscription-based system (Section III) to demonstrate the flexibility and ex- pressiveness of the modelling approach in capturing mi- croservitization scenarios (Section VI). We evaluate our modelling approach using properties from ADL classifica- tion frameworks 11 13 since microservice ambients es- sentially support architecture description for microservices. The evaluation focuses on the fundamental modelling con- structs of microservice ambients and how they support mi- croservitization Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: approach shall promote flexibility and expressiveness in the modelling microservice gran- ularity behaviour, thereby supporting runtime analysis of this behaviour. Crucially this analysis needs to op- timise for autonomy of computation and independent deployability of the microservices. The objective of the analysis is to avoid aggressive decomposition of functionality. The concept of ambients is particularly attractive for the requirements above. We extend ambients by introducing a Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: self-organizing SoSs using SosADL.This toolset is constructed as plugins in Eclipse (http://eclipse.org/). It provides a model-driven architecture development environment where the SosADL meta-model is defined in EMF/Ecore (http://eclipse.org/modeling/emf/), with the textual concrete syntax expressed in Xtext (http://eclipse.org/Xtext/), the graphical concrete syntax developed in Sirius (http://eclipse.org/sirius/), and the type checker implemented in Xtend (http://www.eclipse.org/xtend/), Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: established that software-intensive SoSs on the IoT are dissipative structures, far from equilibrium [25] and that, consequently, self-organization provides a spontaneous mechanism to find new instable equilibriums again far from equilibrium.Thereby, as an SoS is a complex system that is far from equilibrium, to support self-organization, we enhanced SosADL with concurrent constraints, where we substituted the constructs for manipulating and exchanging values by constructs that manipulates and Metadata: {'authors': ""Fl{\\'{a}}vio Oquendo"", 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-00761-4_2', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Self-adaptive Architectures', 'title': 'Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2018} |||| Content: turn facilitates runtime analysis for different quality trade-offs for different granularity levels of a microservice ambient (Requirement 2, addressing C2)). Capturing granularity adaptation behaviour as a transactional set of decomposition merging steps to facilitate runtime analysis is a novel contribution of this work. Other ADLs we have examined in the literature either assume static modelling of the architectural elements or provide little support for their evolution (e.g. by inheritance Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} ||",0.0,0.0,0.0,1.0,0.5,0.0,0.34,0.0,0.0,0.75,0.27,0.25,0.39,0.0,0.0,0.0,4.068921804428101,0.15168749999999995,846887,24,5.936495624790722e-05,AMD Ryzen 9 5900X 12-Core Processor,0,0.0,,Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.35,6.605635704087625e-06,6.597059195199485e-05,2025-01-06T17:28:24,4.070765572998425,2.5131497004112436e-05,"Can we use a generic, modular, and highly scalable process operation framework to automate complex data processing and co-simulation workflows for research on data-driven energy systems?","Yes, we can use a generic, modular, and highly scalable process operation framework to automate complex data processing and co-simulation workflows for research on data-driven energy systems. The context explicitly states that such a framework is presented for this purpose.",,,"['(Generic and Modular Process Operation Framework, http://example.org/hasDescription, A framework that automates the startup, synchronization, and management of scientific data processing and simulation tools.)', '(A Generic and Highly Scalable Framework for the Automation and Execution of Scientific Data Processing and Simulation Workflows, http://example.org/hasResearchQuestion, How can the framework automate the startup, synchronization, and management of scientific data processing and simulation workflows?)']",llm_extraction_strategy,http://ressource.org/publisher_1,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between the proposed framework and its potential impact on automating workflows, which involves assessing causality and correlation. Comparisons is also relevant as the question implies a comparison between the proposed framework and existing methods or frameworks in terms of their capabilities for automating complex workflows.","['Methodology', 'Research']","The question pertains to the use of a framework for automating processes, which falls under the category of Methodology. Additionally, it relates to research on data-driven energy systems, making Research another relevant classification.",,IEEE,3,
1,bee110b0ae7419cac5884d8cc34e2dda,e2d63471-7a68-4dcb-9fc7-0a854d014081,Can we use Apache NiFi to create a user-friendly interface for modeling and managing workflows in energy system solutions?,"Yes, Apache NiFi provides an easy-to-use web user interface that allows users to model, perform, and operate workflows for future energy system solutions.","['(Apache NiFi Integration, http://example.org/hasDescription, Integrates Apache NiFi to provide a web user interface for modeling, performing, and operating workflows.)', '(Apache NiFi, http://example.org/hasDescription, A platform service that automates data processing and distribution between software systems, providing a web-based user interface for building and managing data workflows.)']",http://ressource.org/publisher_1,IEEE,llm_extraction_strategy,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between using Apache NiFi and its potential to create a user-friendly interface, implying a causal relationship. Comparisons is also relevant as it suggests evaluating Apache NiFi against other tools or methods for modeling and managing workflows, which involves examining differences and similarities.","['Methodology', 'Solution']","The question pertains to the use of Apache NiFi, which is a methodology for data flow management, and it seeks to identify a solution for creating a user-friendly interface in the context of energy systems.",,3,,"The question cannot be fully answered with the provided context. The context primarily discusses microservice ambients and architectural modeling approaches, particularly in relation to microservice granularity and microservitization scenarios, without mentioning Apache NiFi or its capabilities for creating user-friendly interfaces for modeling and managing workflows in energy system solutions.","|| Content: meta-modelling approach of ambients with microservice ambients a modelling concept that treats boundaries as an adaptable first-class entity of mi- croservices. We demonstrate the use and significance of our approach by applying it to a microservitization scenario of a hypothetical online movie subscription-based system. The application shows that microservice ambients can expres- sively capture microservitization scenarios with distinct QoS trade-offs driving forces. Additionally, we evaluate Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: subscription-based system (Section III) to demonstrate the flexibility and ex- pressiveness of the modelling approach in capturing mi- croservitization scenarios (Section VI). We evaluate our modelling approach using properties from ADL classifica- tion frameworks 11 13 since microservice ambients es- sentially support architecture description for microservices. The evaluation focuses on the fundamental modelling con- structs of microservice ambients and how they support mi- croservitization Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: hypothetical online movie streaming subscription-based system to demonstrate the significance of systematic, flexible, expressive architectural modelling and analysis support to the microservice granularity problem. System users are allowed to view movies on multiple browsers upon providing their personal information and setting up a subscription scheme. Personal information about system users and about subscription sales are stored in a local database. Displayed media content is regulated by Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: RQ1: How Does NDM Apply to Software Architecture Decision-making? Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: RQ2: What are the Conditions Under Which Decisions are Suited to an NDM Approach in Software Architecture? Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: Decisions that require investigation into new technologies or are outside the area of expertise of an architect are not suited to NDM approaches. Other examples where more analytic approaches are appropriate include choosing a new persistence technology or migrating to a microservice architecture. These are conditions where poor information is not tolerable. Environments where there are panels for reviewing architectures generally wonât use NDM approaches. In these settings, decisions are made Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: patterns into a directed graph that the research community can use to form a pattern language for microservices. There are already promising attempts at this in the industrial community 32 . REFERENCES 1 S.Hassan and R.Bahsoon, Microservices and their design trade-offs: A self-adaptive roadmap, in 13th IEEE Interna- tional Conference on Services Computing (SCC), San Fran- cisco, USA, jun 2016. 2 K.Probst and J.Becker, Engineering trade- offs and the netflix api re-architecture, http: Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: RQ3: What are the Conditions Under Which Decisions are Not Suited to an NDM Approach in Software Architecture? Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: techblog.netflix.com 2016 08 engineering-trade-offs- and-netflix-api.html, aug 2016. 3 T.Wagner, Microservices without the servers, sep 2015. Online . Available: https: aws.amazon.com blogs compute microservices-without-the-servers 4 E.Reinhold, Lessons learned on ubers journey into microservices, jul 2016. Online . Available: https: www.infoq.com presentations uber-darwin ?utm campaign infoq content utm source infoq utm medium feed utm term Microservices 5 T.Huston, What is microservices Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: experience-informed intuition and further characterize NDM as a decision-making technique âwhere decisions are studied as the product of intuition, mental simulation, metaphor, and storytelling.â Klein refers to these four elements as the âsources of powerâ needed in naturalistic settings [7].Manjunath, Bhat, Shumaiev, Biesdorf and Matthes [31] mention NDM in a short paper about decision-making and cognitive biases in software architecture. They state âevidence has been provided to show that Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: software architecture decision-making techniques [24]. They categorize NDM as fitting under one of three types of decision-making, where decision-makers âkeep the first available alternative.â This is not a complete characterization of what occurs. Decision makers do not simply keep the first available option, but rather use pattern matching [30]. Falessi et al. do not mention the expert-informed pattern matching that happens. They do acknowledge the role of intuition, but not explicitly as Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: Most architectural decisions are group decisions. NDM is more challenging in the context of large groups that are distributed. More formality may be required to reach agreement and document decisions in such settings.


NDM decision-making may not be appropriate for locally optimized architectural decisions. Sometimes seemingly localized decisions have broad system impacts. In these situations, analytic approaches to decision-making may be more appropriate. Metadata: {'authors': 'Ken Power, Rebecca Wirfs{-}Brock', 'context_type': 'vector_store', 'doi': '10.1007/978-3-030-29983-5_4', 'keywords': '', 'month': '', 'publisher': 'SpringerLink', 'research_field': 'Software Architecture in Development Process', 'title': 'An Exploratory Study of Naturalistic Decision Making in Complex Software Architecture Environments', 'venue': 'European Conference on Software Architecture (ECSA', 'year': 2019} |||| Content: these concerns to big extent are realised in the glues between the microservices the logical dependencies. Allocating the right expertise potentially reduces long-term social and technical debt in large-scale, distributed systems. This is the case for many microservice applications. B. Qualitative Evaluation 1) Effectiveness and Expressiveness of Modelling: We use properties from the ADL classification framework in 11 to evaluate the expressiveness and effectiveness of microservice ambients in Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: microservitization scenarios. For example, the internals of the ReviewRegula- tion ambient in Figure 6.b can be further analysed to invoke granularity adaptation within this microservice ambient. Configuration refinement and traceability: An ADL must enable consistent mapping between its graphical no- tation and an executable system 11 . An aspect specifica- tion can be automatically mapped to a runnable modelling construct using AMBIENT-PRISMANET middleware 10 rendering an implementable Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: petencies in that domain, therefore we use this framework as opposed to the more recent framework presented in 22 which comprises the domain and business aspects of mod- elling architectures. We elicited the classification framework (a) Problem Context (b) Solution Figure 6. Merging for Change Clustering properties which are relevant to microservitization to make the evaluation more focussed. According to 11 , the essential elements that an ADL must explicitly model are components, connections, Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} ||",0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.63,0.26,0.06,0.27,0.0,0.0,0.0,2.7341647148132324,0.17826945000000002,1007008,24,5.252507930833113e-05,AMD Ryzen 9 5900X 12-Core Processor,0,0.0,,Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.35,5.844687966145403e-06,5.8369767274476535e-05,2025-01-06T17:28:55,3.6017380229986884,2.2235962843211837e-05,Can we use Apache NiFi to create a user-friendly interface for modeling and managing workflows in energy system solutions?,"Yes, Apache NiFi provides an easy-to-use web user interface that allows users to model, perform, and operate workflows for future energy system solutions.",,,"['(Apache NiFi Integration, http://example.org/hasDescription, Integrates Apache NiFi to provide a web user interface for modeling, performing, and operating workflows.)', '(Apache NiFi, http://example.org/hasDescription, A platform service that automates data processing and distribution between software systems, providing a web-based user interface for building and managing data workflows.)']",llm_extraction_strategy,http://ressource.org/publisher_1,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between using Apache NiFi and its potential to create a user-friendly interface, implying a causal relationship. Comparisons is also relevant as it suggests evaluating Apache NiFi against other tools or methods for modeling and managing workflows, which involves examining differences and similarities.","['Methodology', 'Solution']","The question pertains to the use of Apache NiFi, which is a methodology for data flow management, and it seeks to identify a solution for creating a user-friendly interface in the context of energy systems.",,IEEE,3,
2,bee110b0ae7419cac5884d8cc34e2dda,11b84e26-3294-471f-96b8-3ce9ba1b833d,Can we use Docker containerization to facilitate the execution of distinct standalone models in a flexible runtime infrastructure?,"Yes, Docker containerization can be used to facilitate the execution of distinct stand-alone models in a flexible runtime infrastructure. The framework described utilizes container automation technology, specifically Docker containers, to run separate models as distinct processes, each encapsulating a dedicated environment. This allows for a flexible runtime infrastructure that supports the execution of these models.","['(Container Automation Technology, http://example.org/hasDescription, Utilizes Docker containers to provide a flexible runtime infrastructure for running distinct stand-alone models as separate processes.)', '(Container Virtualization (Docker), http://example.org/hasDescription, A platform for easy and automated installation and execution of applications inside containers, allowing multiple applications to run within the same host operating system.)']",http://ressource.org/publisher_1,IEEE,llm_extraction_strategy,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between Docker containerization and the execution of models, potentially examining how one influences the other. Comparisons is also relevant as it implies evaluating Docker containerization against other methods of executing models, assessing its effectiveness in providing flexibility in runtime infrastructure.","['Methodology', 'Procedure', 'Model']","The question pertains to the use of Docker containerization, which is a methodology for deploying applications. It also involves procedures for executing models and refers to distinct standalone models, which aligns with the concept of models in software architecture.",,3,,"The question cannot be fully answered with the provided context. The context discusses microservice architectures, granularity adaptation, and runtime analysis but does not specifically mention Docker containerization or its role in facilitating the execution of distinct standalone models in a flexible runtime infrastructure.","|| Content: granularity at the architectural rather than code level can facilitate analysis of systems that exhibit heterogeneity and decentralised governance as is the case with microservice applications. The heterogeneity of tools supporting microservice architectures calls for flexibility in modelling the granularity decision problem in a technology independent way. Architectural modelling of microservices in particular is a pressing issue due to the lack of standardi- sation for this young research Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: approach shall promote flexibility and expressiveness in the modelling microservice gran- ularity behaviour, thereby supporting runtime analysis of this behaviour. Crucially this analysis needs to op- timise for autonomy of computation and independent deployability of the microservices. The objective of the analysis is to avoid aggressive decomposition of functionality. The concept of ambients is particularly attractive for the requirements above. We extend ambients by introducing a Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: with support for run- time analysis. In particular, microservice ambients support modelling granularity of the micro-design and facilitate runtime reasoning about the macro-design. The hexagonal architecture presented in 30 focuses on the user-facing interfaces. For each business functionality, several adaptors and interfaces are modelled depending on the user type. Consequently, each of these adaptors and inter- faces is mapped to a separate microservice. The hexagonal architecture supports Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: different instances of the granularity adaptation aspect, thereby changing the theme of microservitization at runtime. Figure 5. Possible architectural configuration using microservice ambient instances VI. EVALUATION In this section we apply our microservice ambients to model a microservitization scenarios 20 , 21 . We then evaluate our modelling approach for flexibility, expressive- ness and support for runtime analysis using properties from 11 13 . A. Clustering for Localising change Problem Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: runtime model of the solution space of this decision problem. Configuration heterogeneity: It is essential for ADLs to facilitate modelling architectures that employ varying tech- nological choices (e.g., different programming languages) 11 . The aspect-oriented nature of microservice ambients supports such heterogeneous modelling. Crucially, the gran- ularity adaptation aspect captures granularity adaptation behaviour independent of the technologies used within the architectural elements Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: turn facilitates runtime analysis for different quality trade-offs for different granularity levels of a microservice ambient (Requirement 2, addressing C2)). Capturing granularity adaptation behaviour as a transactional set of decomposition merging steps to facilitate runtime analysis is a novel contribution of this work. Other ADLs we have examined in the literature either assume static modelling of the architectural elements or provide little support for their evolution (e.g. by inheritance Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: to domain- driven modelling for the system domain. Moreover, they provide support for runtime reasoning about adapting these boundaries with the granularity adaptation aspect. In 29 ,a static microservice design model is proposed which is made up of 5 dimensions: culture, organisation, processes and tools, individual service (micro-) design and overall architecture (macro-) design. Moreover, it is possible to create a hierarchy of design models. Microservice ambients enrich this design model Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: meta-modelling approach of ambients with microservice ambients a modelling concept that treats boundaries as an adaptable first-class entity of mi- croservices. We demonstrate the use and significance of our approach by applying it to a microservitization scenario of a hypothetical online movie subscription-based system. The application shows that microservice ambients can expres- sively capture microservitization scenarios with distinct QoS trade-offs driving forces. Additionally, we evaluate Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: subscription-based system (Section III) to demonstrate the flexibility and ex- pressiveness of the modelling approach in capturing mi- croservitization scenarios (Section VI). We evaluate our modelling approach using properties from ADL classifica- tion frameworks 11 13 since microservice ambients es- sentially support architecture description for microservices. The evaluation focuses on the fundamental modelling con- structs of microservice ambients and how they support mi- croservitization Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: general lack of systematic approaches that model microservices design decisions, in- cluding deciding the optimal microservice boundaries optimal microservice granularity level. Bridging this gap is a prerequisite for advancing the adoption of this paradigm and for facilitating design and runtime analysis that support its operation, maintenance and evolution. In 1 we formulated this design decision as a runtime decision problem and we set a roadmap for a self-adaptive solution to it. Splitting Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: Time and Runtime Analysis: We use properties from 12 , 13 to evaluate the support that microservice ambients provide for runtime analysis of gran- ularity (Requirement 2). In this section we illustrate the significance of each feature in relation to runtime reasoning about the microservice granularity problem and how it is supported in the microservice ambient approach. Location: Location refers to space where an architectural element is allowed to move. This is significant to defining the Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: 25 . In these ADLs, invoking a modification to an architectural configuration involves re-defining both components and connectors. In microservice ambients, it is the runtime environment which implicitly handles the implications of granularity adaptation, allowing the unit of mobility to be captured clearly as inputs to the decompose and merge transactions (Figure VII. RELATED WORK Microservice adopters have modelled microservice archi- tectures using several concepts. Here we summarise the Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: bounded context represents an independent area of the domain (in- spired by 16 , 17 ). Independence here implies that this domain has consistent rules in terms of team organization, usage within specific parts of the application, and physical manifestations such as code bases and database schemas 17 and these rules only apply within that bounded context. Each modular boundary represents a single microservice within a bounded context. The intuition here is that a modular boundary encapsulates Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: properties such as utility-driven design, tool heterogeneity and decentralised governance. The evaluation also highlights how microservice ambients support runtime analysis, mobility and location awareness; all of which are significant to quality-driven microservice granularity adaptation. The evaluation is general and irrespective of the particular application domain and the business competencies in that domain. II. BACKGROUND Ambient-PRISMA 14 extends traditional architectural elements with a Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: microservitization scenarios. For example, the internals of the ReviewRegula- tion ambient in Figure 6.b can be further analysed to invoke granularity adaptation within this microservice ambient. Configuration refinement and traceability: An ADL must enable consistent mapping between its graphical no- tation and an executable system 11 . An aspect specifica- tion can be automatically mapped to a runnable modelling construct using AMBIENT-PRISMANET middleware 10 rendering an implementable Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} ||",0.0,0.0,0.0,0.83,0.67,0.0,0.0,0.14,0.0,0.69,0.33,0.15,0.26,0.0,0.0,0.0,3.380154609680176,0.2041512000000001,1172131,24,4.931679746873669e-05,AMD Ryzen 9 5900X 12-Core Processor,0,0.0,,Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.35,5.486866460311823e-06,5.4803663929048516e-05,2025-01-06T17:29:27,3.38174298299964,2.0877455773771033e-05,Can we use Docker containerization to facilitate the execution of distinct standalone models in a flexible runtime infrastructure?,"Yes, Docker containerization can be used to facilitate the execution of distinct stand-alone models in a flexible runtime infrastructure. The framework described utilizes container automation technology, specifically Docker containers, to run separate models as distinct processes, each encapsulating a dedicated environment. This allows for a flexible runtime infrastructure that supports the execution of these models.",,,"['(Container Automation Technology, http://example.org/hasDescription, Utilizes Docker containers to provide a flexible runtime infrastructure for running distinct stand-alone models as separate processes.)', '(Container Virtualization (Docker), http://example.org/hasDescription, A platform for easy and automated installation and execution of applications inside containers, allowing multiple applications to run within the same host operating system.)']",llm_extraction_strategy,http://ressource.org/publisher_1,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between Docker containerization and the execution of models, potentially examining how one influences the other. Comparisons is also relevant as it implies evaluating Docker containerization against other methods of executing models, assessing its effectiveness in providing flexibility in runtime infrastructure.","['Methodology', 'Procedure', 'Model']","The question pertains to the use of Docker containerization, which is a methodology for deploying applications. It also involves procedures for executing models and refers to distinct standalone models, which aligns with the concept of models in software architecture.",,IEEE,3,
3,bee110b0ae7419cac5884d8cc34e2dda,fcfd56bb-ebf0-4484-bd8d-4e2d7971dea8,Can we use microservices architecture to improve the scalability and integration of big data infrastructures in scientific workflows?,"Yes, microservices architecture can enhance the scalability and integration of big data infrastructures in scientific workflows. The context indicates that microservices are part of an IT-architectural style that emphasizes dividing the system into small and lightweight services designed to perform cohesive business functions. Additionally, the framework mentioned can easily integrate Big Data infrastructures and scalable data processing based on microservices.","['(Microservices Architecture, http://example.org/hasDescription, An IT-architectural style that emphasizes dividing the system into small and lightweight services that perform cohesive business functions.)', '(Microservices Integration, http://example.org/hasDescription, Integrates microservices to allow for scalable data processing and web-based tools within the framework.)']",http://ressource.org/publisher_1,IEEE,llm_extraction_strategy,,"['Contingencies', 'Multple Intentions']","Contingencies is appropriate because the question explores the relationship between microservices architecture and its potential effects on scalability and integration, which involves assessing how one phenomenon may influence another. Additionally, Multple Intentions is relevant as the question contains two separate but related intentions: the use of microservices architecture and its impact on both scalability and integration.","['Methodology', 'Concept', 'Solution']","The question pertains to the use of microservices architecture, which is a specific methodology in software development. It also touches on the concept of scalability and integration within big data infrastructures, and seeks a solution to improve these aspects in scientific workflows.",,3,,"The question cannot be fully answered with the provided context. The context discusses microservices architecture, its granularity, and its benefits in terms of flexibility, maintenance costs, and quality of service. However, it does not specifically address the application of microservices architecture to improve the scalability and integration of big data infrastructures in scientific workflows.","|| Content: domain. Keywords-microservices; meta-modelling; granularity; ambi- ents I. INTRODUCTION Microservitization is a shift towards transforming ser- vices components into microservices more fine-grained and autonomic services that isolate fine-grained business functionalities by boundaries and interact through standard- ised interfaces 1 . Microservitization is rapidly increasing; many distributed and cloud-based systems have evolved from monolithic to microservices architectures. Examples of Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: nance of the microservices, where each microservice en- capsulates fine-grained business functionality. Microservi- tization hopes to enhance the flexibility of large scale distributed applications to make them better cope with operation, maintenance and evolution uncertainties. Such flexibility promises improvement to the maintenance costs and quality of service (QoS) provision to system users. With the hype and increased interest of software industries in microservices, there is still a Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: entities called microservices is a core activity underlying microservitization. We define microservitization as the paradigm shift towards microservices. Determining the optimal microservice boundaries (i.e. microservice granularity) is among the key microservitization design decisions that influence the Quality of Service (QoS) of the microservice ap- plication at runtime. In this paper, we provide an architecture- centric approach to model this decision problem. We build on ambients a Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: these concerns to big extent are realised in the glues between the microservices the logical dependencies. Allocating the right expertise potentially reduces long-term social and technical debt in large-scale, distributed systems. This is the case for many microservice applications. B. Qualitative Evaluation 1) Effectiveness and Expressiveness of Modelling: We use properties from the ADL classification framework in 11 to evaluate the expressiveness and effectiveness of microservice ambients in Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: granularity at the architectural rather than code level can facilitate analysis of systems that exhibit heterogeneity and decentralised governance as is the case with microservice applications. The heterogeneity of tools supporting microservice architectures calls for flexibility in modelling the granularity decision problem in a technology independent way. Architectural modelling of microservices in particular is a pressing issue due to the lack of standardi- sation for this young research Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: for representing microservices and managing their granularities to model this decision problem.A systematic architecture- centric approach for modelling microservice granularity pro- vides the appropriate level of abstraction for managing this 2017 IEEE International Conference on Software Architecture 978-1-5090-5729-0 17 31.00 2017 IEEE DOI 10.1109 ICSA. runtime decision problem. In particular, this approach has the promise to scale the analysis of this problem. Reasoning about microservice Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: large-scale applications which adopt microservices include Netflix 2 , Amazon 3 and Uber 4 . Netflix for example receives around one billion streaming requests everyday 5 , thereafter routing each request through an API to multiple back-end microservices 2 . Each microservice encapsulates a fine-grained business functionality. Isolating business functionalities aims at enhancing the autonomy and replaceability of the individual microser- vice(s) 1 . This in turn can enhance decentralised gover- Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: field 7 . Although intuitively the main trigger for microservitization is people finding they have a monolith thats too big to modify and deploy 8 , we have not encountered any architectural modelling support in the literature to manage the adaptation from the too big or too small services to the good enough level of granularity. The novel contribution of this paper is an architecture- centric modelling concept for microservices. The concept extends ambients 9 , 10 (explained in Section II) by Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: general lack of systematic approaches that model microservices design decisions, in- cluding deciding the optimal microservice boundaries optimal microservice granularity level. Bridging this gap is a prerequisite for advancing the adoption of this paradigm and for facilitating design and runtime analysis that support its operation, maintenance and evolution. In 1 we formulated this design decision as a runtime decision problem and we set a roadmap for a self-adaptive solution to it. Splitting Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: different instances of the granularity adaptation aspect, thereby changing the theme of microservitization at runtime. Figure 5. Possible architectural configuration using microservice ambient instances VI. EVALUATION In this section we apply our microservice ambients to model a microservitization scenarios 20 , 21 . We then evaluate our modelling approach for flexibility, expressive- ness and support for runtime analysis using properties from 11 13 . A. Clustering for Localising change Problem Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: patterns into a directed graph that the research community can use to form a pattern language for microservices. There are already promising attempts at this in the industrial community 32 . REFERENCES 1 S.Hassan and R.Bahsoon, Microservices and their design trade-offs: A self-adaptive roadmap, in 13th IEEE Interna- tional Conference on Services Computing (SCC), San Fran- cisco, USA, jun 2016. 2 K.Probst and J.Becker, Engineering trade- offs and the netflix api re-architecture, http: Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: architecture? https: smartbear.com learn api-design what-are- microservices . 6 Z.Dehghani, Zhamak dehghani real world microservices: Lessons from the frontline, https: youtu.be hsoovFbpAoE, Youtube, feb 2015. 7 N.Alshuqayran, N.Ali, and R.Evans, A systematic mapping study in microservice architecture, in 2016 IEEE 9th In- ternational Conference on Service-Oriented Computing and Applications, 2016. 8 M.Fowler, Microservicepremium, may 2015. Online . Available: http: martinfowler.com bliki Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: techblog.netflix.com 2016 08 engineering-trade-offs- and-netflix-api.html, aug 2016. 3 T.Wagner, Microservices without the servers, sep 2015. Online . Available: https: aws.amazon.com blogs compute microservices-without-the-servers 4 E.Reinhold, Lessons learned on ubers journey into microservices, jul 2016. Online . Available: https: www.infoq.com presentations uber-darwin ?utm campaign infoq content utm source infoq utm medium feed utm term Microservices 5 T.Huston, What is microservices Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: erez et al., Integrating aspects in software architectures: Prisma applied to robotic tele-operated systems, Inf. Softw. Technol., vol. 50, no. 9-10, pp. 969990, Aug. 2008. Online . Available: http: dx.doi.org 10.1016 j.infsof.2007.08.007 20 M.Fowler and J.Lewis, Microservices a definition of this new architectural term, http: martinfowler.com articles microservices.html, March 2014. 21 M.Nygard, Release It!: Design and Deploy Production- ready Software, ser. Pragmatic Bookshelf Series. , 2007. Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} ||",0.15,0.25,0.2,0.9,0.67,0.0,0.8,0.0,0.0,0.82,0.29,0.22,0.23,0.0,0.0,0.0,2.9837982654571533,0.23071500000000011,1347310,24,4.353644452501157e-05,AMD Ryzen 9 5900X 12-Core Processor,0,0.0,,Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.35,4.844398549535801e-06,4.838084307454737e-05,2025-01-06T17:29:58,2.9853754619998654,1.843068216924882e-05,Can we use microservices architecture to improve the scalability and integration of big data infrastructures in scientific workflows?,"Yes, microservices architecture can enhance the scalability and integration of big data infrastructures in scientific workflows. The context indicates that microservices are part of an IT-architectural style that emphasizes dividing the system into small and lightweight services designed to perform cohesive business functions. Additionally, the framework mentioned can easily integrate Big Data infrastructures and scalable data processing based on microservices.",,,"['(Microservices Architecture, http://example.org/hasDescription, An IT-architectural style that emphasizes dividing the system into small and lightweight services that perform cohesive business functions.)', '(Microservices Integration, http://example.org/hasDescription, Integrates microservices to allow for scalable data processing and web-based tools within the framework.)']",llm_extraction_strategy,http://ressource.org/publisher_1,,"['Contingencies', 'Multple Intentions']","Contingencies is appropriate because the question explores the relationship between microservices architecture and its potential effects on scalability and integration, which involves assessing how one phenomenon may influence another. Additionally, Multple Intentions is relevant as the question contains two separate but related intentions: the use of microservices architecture and its impact on both scalability and integration.","['Methodology', 'Concept', 'Solution']","The question pertains to the use of microservices architecture, which is a specific methodology in software development. It also touches on the concept of scalability and integration within big data infrastructures, and seeks a solution to improve these aspects in scientific workflows.",,IEEE,3,
4,bee110b0ae7419cac5884d8cc34e2dda,7265fdfb-4337-48b6-ba7f-87a0a0eb43dc,Can we use Apache Kafka to manage low-latency and high-throughput messaging in a distributed data streaming environment?,"Yes, Apache Kafka is a message-oriented, distributed data streaming platform that provides low-latency, high-throughput, fault-tolerant publish-subscribe messaging. This indicates that it can be used to manage low-latency, high-throughput messaging in a distributed data streaming environment.","['(Apache Kafka, http://example.org/hasDescription, A message-oriented, distributed data streaming platform that provides low-latency, high-throughput, fault-tolerant publish-subscribe messaging.)']",http://ressource.org/publisher_1,IEEE,llm_extraction_strategy,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between using Apache Kafka and its effectiveness in managing low-latency and high-throughput messaging, which involves assessing causality and correlation. Comparisons is also relevant as it implies evaluating Apache Kafka against other potential solutions or methods for managing messaging in a distributed environment.","['Methodology', 'Concept', 'Solution']","The question pertains to the use of Apache Kafka, which is a methodology for managing messaging in distributed systems. It also relates to concepts of low-latency and high-throughput messaging, and it seeks a solution for managing these aspects in a data streaming environment.",,3,,"The question cannot be fully answered with the provided context. The context discusses microservices, architectural modeling, and granularity adaptation but does not mention Apache Kafka or its capabilities in managing low-latency and high-throughput messaging in a distributed data streaming environment.","|| Content: communication patterns for different message syntaxes de- fine the behaviour of a microservice sending or receiving the message. However, modelling the concerns of each microservice using aspects provides a more powerful, in- depth definition of each microservices behaviour than the light weight message-based approach. VIII. CONCLUSION AND FUTURE WORK In this paper we provide an architecture-centric approach to model microservice granularity. In particular, we extend the aspect-oriented Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: microservice ambient can act as an autonomic element that employs the phases of the MAPE-K loop to model the runtime granularity adaptation 18 . The MAPE-K loop defines the stages for an autonomous element to plan the adaptation of a running system: monitoring the running system, analysing monitored data, planning the adaptation actions, executing the plan on the running system, and finally updating the knowledge base of the autonomous element for future planning optimisation. However, in this Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: monitoring. Problem: Localising change and reducing its ripple effects through granularity adaptation. Main driving forces: Reducing logical dependencies across microservice boundaries, thereby enhancing the autonomy of each individual microservice and the maintainabil- ity evolvability of the overall architecture. Enhancing the productivity and independence of the team responsible for a microservice. Invoking granularity adaptation: In Figure 6.b, the related functional elements are now Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: scalability. They conclude that REST is more efficient for data trans- mission. There are also studies on migrating SOAP services to REST. Upadhyaya et al. 23 identify resources from a SOAP web service by analyzing the service description and migrating each service to a REST architecture. Their approach consists on the identification of similar operations, resources, and methods. They also conduct a case study to evaluate the approach. As a result, the authors conclude that the performed Metadata: {'authors': 'Gleison Brito, Marco Valente', 'context_type': 'vector_store', 'doi': '10.1109/ICSA47634.2020.00016', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'REST vs GraphQL: A Controlled Experiment', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2020} |||| Content: hypothetical online movie streaming subscription-based system to demonstrate the significance of systematic, flexible, expressive architectural modelling and analysis support to the microservice granularity problem. System users are allowed to view movies on multiple browsers upon providing their personal information and setting up a subscription scheme. Personal information about system users and about subscription sales are stored in a local database. Displayed media content is regulated by Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: large-scale applications which adopt microservices include Netflix 2 , Amazon 3 and Uber 4 . Netflix for example receives around one billion streaming requests everyday 5 , thereafter routing each request through an API to multiple back-end microservices 2 . Each microservice encapsulates a fine-grained business functionality. Isolating business functionalities aims at enhancing the autonomy and replaceability of the individual microser- vice(s) 1 . This in turn can enhance decentralised gover- Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: patterns into a directed graph that the research community can use to form a pattern language for microservices. There are already promising attempts at this in the industrial community 32 . REFERENCES 1 S.Hassan and R.Bahsoon, Microservices and their design trade-offs: A self-adaptive roadmap, in 13th IEEE Interna- tional Conference on Services Computing (SCC), San Fran- cisco, USA, jun 2016. 2 K.Probst and J.Becker, Engineering trade- offs and the netflix api re-architecture, http: Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: meta-modelling approach of ambients with microservice ambients a modelling concept that treats boundaries as an adaptable first-class entity of mi- croservices. We demonstrate the use and significance of our approach by applying it to a microservitization scenario of a hypothetical online movie subscription-based system. The application shows that microservice ambients can expres- sively capture microservitization scenarios with distinct QoS trade-offs driving forces. Additionally, we evaluate Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: monitors parameters (e.g., change rate, failure rate) indicating QoS. It then utilises the inherited interface services to trigger granularity adaptations in response to changes in the runtime parameters. Mobility aspect: In the context of supporting granular- ity adaptation, the mobility aspect allows microservice ambients to enter or exit the boundaries of a parent microservice ambient. Coordination aspect: At a high level, the coordina- tion aspect redirects calls from external architectural Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: microservice ambients as an ADL for microservices. Due to their power in capturing distinct scenarios, mi- croservice ambients can provide the primitives for devising a catalogue of granularity adaptation patterns, each mapping to different quality trade-offs. A related interesting research direction is mapping each quality to underlying runtime metrics reflecting it. For example, attachment number is used as metric of logical dependency reduction in the change clustering scenario pattern. The Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: different instances of the granularity adaptation aspect, thereby changing the theme of microservitization at runtime. Figure 5. Possible architectural configuration using microservice ambient instances VI. EVALUATION In this section we apply our microservice ambients to model a microservitization scenarios 20 , 21 . We then evaluate our modelling approach for flexibility, expressive- ness and support for runtime analysis using properties from 11 13 . A. Clustering for Localising change Problem Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: techblog.netflix.com 2016 08 engineering-trade-offs- and-netflix-api.html, aug 2016. 3 T.Wagner, Microservices without the servers, sep 2015. Online . Available: https: aws.amazon.com blogs compute microservices-without-the-servers 4 E.Reinhold, Lessons learned on ubers journey into microservices, jul 2016. Online . Available: https: www.infoq.com presentations uber-darwin ?utm campaign infoq content utm source infoq utm medium feed utm term Microservices 5 T.Huston, What is microservices Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: these concerns to big extent are realised in the glues between the microservices the logical dependencies. Allocating the right expertise potentially reduces long-term social and technical debt in large-scale, distributed systems. This is the case for many microservice applications. B. Qualitative Evaluation 1) Effectiveness and Expressiveness of Modelling: We use properties from the ADL classification framework in 11 to evaluate the expressiveness and effectiveness of microservice ambients in Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: with support for run- time analysis. In particular, microservice ambients support modelling granularity of the micro-design and facilitate runtime reasoning about the macro-design. The hexagonal architecture presented in 30 focuses on the user-facing interfaces. For each business functionality, several adaptors and interfaces are modelled depending on the user type. Consequently, each of these adaptors and inter- faces is mapped to a separate microservice. The hexagonal architecture supports Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} |||| Content: general lack of systematic approaches that model microservices design decisions, in- cluding deciding the optimal microservice boundaries optimal microservice granularity level. Bridging this gap is a prerequisite for advancing the adoption of this paradigm and for facilitating design and runtime analysis that support its operation, maintenance and evolution. In 1 we formulated this design decision as a runtime decision problem and we set a roadmap for a self-adaptive solution to it. Splitting Metadata: {'authors': 'Sara Hassan, Nour Ali, Rami Bahsoon', 'context_type': 'vector_store', 'doi': '10.1109/ICSA.2017.32', 'keywords': '', 'month': '', 'publisher': 'IEEE', 'research_field': '', 'title': 'Microservice Ambients: An Architectural Meta-Modelling Approach for Microservice Granularity', 'venue': 'International Conference on Software Architecture (ICSA', 'year': 2017} ||",0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.7,0.42,0.21,0.33,0.0,0.0,0.0,1.9765949249267578,0.2589816000000001,1531324,24,4.15367811541652e-05,AMD Ryzen 9 5900X 12-Core Processor,0,0.0,,Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.35,4.621901812801998e-06,4.61586829669672e-05,2025-01-06T17:30:31,2.8482549300006212,1.7584150276266155e-05,Can we use Apache Kafka to manage low-latency and high-throughput messaging in a distributed data streaming environment?,"Yes, Apache Kafka is a message-oriented, distributed data streaming platform that provides low-latency, high-throughput, fault-tolerant publish-subscribe messaging. This indicates that it can be used to manage low-latency, high-throughput messaging in a distributed data streaming environment.",,,"['(Apache Kafka, http://example.org/hasDescription, A message-oriented, distributed data streaming platform that provides low-latency, high-throughput, fault-tolerant publish-subscribe messaging.)']",llm_extraction_strategy,http://ressource.org/publisher_1,,"['Contingencies', 'Comparisons']","Contingencies is appropriate because the question explores the relationship between using Apache Kafka and its effectiveness in managing low-latency and high-throughput messaging, which involves assessing causality and correlation. Comparisons is also relevant as it implies evaluating Apache Kafka against other potential solutions or methods for managing messaging in a distributed environment.","['Methodology', 'Concept', 'Solution']","The question pertains to the use of Apache Kafka, which is a methodology for managing messaging in distributed systems. It also relates to concepts of low-latency and high-throughput messaging, and it seeks a solution for managing these aspects in a data streaming environment.",,IEEE,3,
